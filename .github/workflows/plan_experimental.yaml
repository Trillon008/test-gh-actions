name: Create terraform plan

on: [pull_request]

permissions:
  contents: read
  pull-requests: write

jobs:
  core:
    name: "Configure and Deploy Core"
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    strategy:
      max-parallel: 1
      fail-fast: true
    steps:
    - name: Checkout to repository
      uses: actions/checkout@v4
    - name: Generate Matrix
      id: generate-matrix
      run: echo "matrix=$(cat matrix.stacks.yaml | yq '.projects' -I0 -o json)" >> $GITHUB_OUTPUT
      #       echo "matrix=['hayley', 'jenna', 'victoria' ]" >> $GITHUB_OUTPUT

  dev:
    runs-on: ubuntu-latest
    needs: core
    name: "Plan ${{ matrix.projects }} development"
    strategy:
      fail-fast: false
      matrix:
        projects: ${{ fromJson(needs.core.outputs.matrix) }}
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: terraform plan
        uses: dflook/terraform-plan@v2
        with:
          path: stacks/${{ matrix.projects }}/development
        continue-on-error: true

  staging:
    runs-on: ubuntu-latest
    needs: [core, dev]
    name: "Plan ${{ matrix.projects }} staging"
    strategy:
      fail-fast: false
      matrix:
        projects: ${{ fromJson(needs.core.outputs.matrix) }}
    env:
      GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: terraform plan
        uses: dflook/terraform-plan@v2
        with:
          path: stacks/${{ matrix.projects }}/staging
        continue-on-error: true
